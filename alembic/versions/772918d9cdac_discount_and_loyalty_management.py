"""discount and loyalty management

Revision ID: 772918d9cdac
Revises: 8dbbc088c9ac
Create Date: 2025-02-02 18:36:21.220649

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '772918d9cdac'
down_revision: Union[str, None] = '8dbbc088c9ac'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('pricelists',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pricelist_lines',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('new_price', sa.Float(), nullable=False),
    sa.Column('min_quantity', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('end_date', sa.DateTime(), nullable=False),
    sa.Column('pricelist_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.CheckConstraint('start_date < end_date'),
    sa.ForeignKeyConstraint(['pricelist_id'], ['pricelists.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('programs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('program_type', sa.Enum('BuyXgetY', 'Coupon', name='programtype'), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('end_date', sa.DateTime(), nullable=False),
    sa.Column('discount', sa.Float(), nullable=True),
    sa.Column('product_to_buy_id', sa.Integer(), nullable=False),
    sa.Column('product_to_get_id', sa.Integer(), nullable=False),
    sa.CheckConstraint('((discount IS NULL AND product_to_buy_id IS NOT NULL AND product_to_get_id IS NOT NULL ) OR (discount IS NOT NULL AND product_to_buy_id IS NULL AND product_to_get_id IS NULL))'),
    sa.CheckConstraint('start_date < end_date', name='valid_program_date'),
    sa.ForeignKeyConstraint(['product_to_buy_id'], ['products.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['product_to_get_id'], ['products.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('program_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('status', sa.Enum('Active', 'Inactive', name='programitemtype'), nullable=False),
    sa.Column('program_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['program_id'], ['programs.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('program_items')
    op.drop_table('programs')
    op.drop_table('pricelist_lines')
    op.drop_table('pricelists')
    # ### end Alembic commands ###
